struct ChainNode<N>(
    value: int,
    next: N
)

union Chain(
    Last: (),
    Node: ChainNode<Chain>
)


fn int_to_chain(x: int)->Chain {
    if(x == 0, 
        Chain::Last(()),
        Chain::Node(ChainNode(x%10, int_to_chain(floor(x/10))))
    )
}

fn chain_to_int(x: Chain)->int {
    if(
        x?:Last.is_some(),
        0,
        x!:Node::value + 10*chain_to_int(x!:Node::next)
    )
}


fn main()->bool {
    let z = 205;
    let x = int_to_chain(z);
    assert(chain_to_int(int_to_chain(z)) == z)
}