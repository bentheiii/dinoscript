fn foo(a: int)->int{
    a*a
}

fn foo(a: int, b: int)->int{
    a*b
}

fn foo(b: bool)->int{
    0
}

fn bar<T>(a: T, fn_foo: (T)->(T) ~= foo)->T{
    fn_foo(a)
}

fn other_foo(a: int)->int{
    a*a*a
}

fn main() -> bool{
    assert(bar(5) == 25)
    && assert(bar(5, foo{int}) == 25)
    && assert(bar(5, other_foo) == 125)
}